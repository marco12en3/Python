import os
import sipconfig
import subprocess

# The name of the SIP build file generated by SIP and used by the build
# system.
build_file = "word.sbf"

# Get the SIP configuration information.
config = sipconfig.Configuration()

# Run SIP to generate the code.
os.system(" ".join([config.sip_bin, "-c", ".", "-b", build_file, "word.sip"]))

# Create the Makefile.
makefile = sipconfig.SIPModuleMakefile(config, build_file)

# Add the library we are wrapping.  The name doesn't include any platform
# specific prefixes or extensions (e.g. the "lib" prefix on UNIX, or the
# ".dll" extension on Windows).
makefile.extra_libs = ["word"]

# Generate the Makefile itself.
makefile.generate()
filepath = ['C:/Program Files (x86)/Microsoft Visual Studio 14.0/VC/vcvarsall.bat',"x64"]
p = subprocess.Popen(filepath, shell=True, stdout = subprocess.PIPE)
print(p.communicate())
filepath2 = ['C:/Users/Marco/Python/modules/scope/src/sip/build.bat']
p = subprocess.Popen(filepath2, shell=True, stdout = subprocess.PIPE)
print(p.communicate())

